library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity datapath1 is
    generic (
        WIDTH : positive := 8);
    port(
        clk        : in   std_logic;
        rst        : in   std_logic;
        x          : in   std_logic_vector(WIDTH-1 downto 0);
        y          : in   std_logic_vector(WIDTH-1 downto 0);
        x_sel      : in   std_logic;
        x_en       : in   std_logic;
        y_sel      : in   std_logic;
        y_en       : in   std_logic;
        output_en  : in   std_logic;
        x_lt_y     : out  std_logic;
        x_ne_y     : out  std_logic;
        output     : out  std_logic_vector(WIDTH-1 downto 0));
end datapath1;

architecture DEF of datapath1 is
    --variables here
    signal tmp_x, tmp_y, x_min_y, y_min_x, x_mux_out, y_mux_out : std_logic_vector(WIDTH-1 downto 0);
begin --DEF
    U_MUX_X : entity work.mux_2x1 
        generic map (WIDTH => WIDTH)
        port map (
            in1 => x,
            in2 => x_min_y,
            sel => x_sel,
            output => x_mux_out);
    U_MUX_Y : entity work.mux_2x1 
        generic map (WIDTH => WIDTH)
        port map (
            in1 => y,
            in2 => y_min_x,
            sel => y_sel,
            output => y_mux_out);
    U_TMP_X_REG : entity work.reg
        generic map (WIDTH => WIDTH)
        port map (
            clk => clk;
            rst => rst;
            en  => x_en;
            input  => x_mux_out;
            output => tmp_x);
end DEF;